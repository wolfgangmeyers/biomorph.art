{"version":3,"sources":["node_modules/d3-color/src/define.js","node_modules/d3-color/src/color.js","node_modules/d3-color/src/math.js","node_modules/d3-color/src/lab.js","node_modules/d3-color/src/cubehelix.js","node_modules/d3-color/src/index.js","norm.ts","generator.ts","pathbuilder.ts","renderer.ts","index.ts"],"names":["constructor","factory","prototype","extend","parent","definition","Object","create","key","Color","darker","brighter","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatHsl","hslConvert","formatHsl","color_formatRgb","formatRgb","color","format","m","l","trim","toLowerCase","exec","length","parseInt","rgbn","Rgb","rgba","hsla","hasOwnProperty","NaN","n","r","g","b","a","rgbConvert","o","opacity","arguments","rgb_formatHex","hex","rgb_formatRgb","isNaN","Math","max","min","round","value","toString","h","s","Hsl","hsl","hsl2rgb","m1","m2","copy","channels","assign","displayable","k","pow","deg2rad","PI","rad2deg","K","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","hcl2lab","x","z","rgb2lrgb","y","xyz2lab","lab","t","lab2xyz","lrgb2rgb","hclConvert","c","atan2","sqrt","lch","hcl","cos","sin","A","B","C","D","E","ED","EB","BC_DA","cubehelixConvert","Cubehelix","bl","cubehelix","cosh","sinh"],"mappings":"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","file":"biomorphic.3b681ca3.js","sourceRoot":"..","sourcesContent":["export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb} from \"./color.js\";\nimport {deg2rad, rad2deg} from \"./math.js\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * deg2rad;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {deg2rad, rad2deg} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export {default as color, rgb, hsl} from \"./color.js\";\nexport {default as lab, hcl, lch, gray} from \"./lab.js\";\nexport {default as cubehelix} from \"./cubehelix.js\";\n","export function norm(value: number, min: number, max: number): number {\n    if (value < min) {\n        value = min;\n    }\n    if (value > max) {\n        value = max;\n    }\n    return value;\n}\n\nexport function wrap(value: number, min: number, max: number): number {\n    while (value < min) {\n        value += max;\n    }\n    while (value > max) {\n        value -= max;\n    }\n    return value;\n}","import * as d3 from \"d3-color\";\n\nimport { Painting } from \"./model\";\nimport { Instruction, InstructionType } from \"./pathbuilder\";\nimport { norm, wrap } from \"./norm\";\n\nconst instructionTypes: InstructionType[] = [\n    \"strokeStyle\",\n    \"position\",\n    \"lineWidth\",\n    \"speed\"\n];\n\nexport function generateBeginInstruction(canvasWidth: number, canvasHeight: number): Instruction {\n\n    return {\n        type: \"begin\",\n        args: {\n            speed: Math.random() * 10 + 1,\n            strokeStyle: d3.rgb(\n                Math.random() * 255,\n                Math.random() * 255,\n                Math.random() * 255,\n            ).hex(),\n            lineWidth: Math.random() * 5 + 0.1,\n            x: Math.random() * canvasWidth,\n            y: Math.random() * canvasHeight,\n        }\n    }\n}\n\nexport function generateRandomInstruction(): Instruction {\n    const instructionType = instructionTypes[Math.floor(Math.random() * instructionTypes.length)];\n    return instructionGenerators[instructionType]();\n}\n\nconst instructionGenerators = {\n    \"strokeStyle\": generateStrokeStyleInstruction,\n\n    // stubes\n    \"position\": generatePositionInstruction,\n    \"lineWidth\": generateLineWidthInstruction,\n    \"speed\": generateSpeedInstruction,\n}\n\nconst instructionMutators = {\n    \"strokeStyle\": mutateStrokeStyleInstruction,\n    \"position\": mutatePositionInstruction,\n    \"begin\": mutateBeginInstruction,\n    \"lineWidth\": mutateLineWidthInstruction,\n    \"speed\": mutateBeginInstruction,\n    \"end\": mutateBeginInstruction,\n}\n\nfunction generateStrokeStyleInstruction(): Instruction {\n    return {\n        type: \"strokeStyle\",\n        args: {\n            r: Math.random() * config.maxColorMutation * 2 - config.maxColorMutation,\n            g: Math.random() * config.maxColorMutation * 2 - config.maxColorMutation,\n            b: Math.random() * config.maxColorMutation * 2 - config.maxColorMutation,\n        }\n    };\n}\n\nfunction generatePositionInstruction(): Instruction {\n    return {\n        type: \"position\",\n        args: {\n            angle: Math.random() * Math.PI * 2,\n        },\n    };\n}\n\nfunction generateLineWidthInstruction(): Instruction {\n    return {\n        type: \"lineWidth\",\n        args: {\n            amount: Math.random() * config.maxLineWidthMutation * 2 - config.maxLineWidthMutation,\n        }\n    };\n}\n\nfunction generateSpeedInstruction(): Instruction {\n    return {\n        type: \"speed\",\n        args: {\n            amount: Math.random() * config.maxSpeedMutation * 2 - config.maxSpeedMutation\n        }\n    };\n}\n\nconst config = {\n    maxMutationIterations: 200,\n    addPositionProbability: 0.3,\n    addStrokeStyleProbability: 0.1,\n    addSpeedProbability: 0.3,\n    addLineWidthProbability: 0.1,\n\n    mutateInstructionProbability: 0.3,\n    removeInstructionProbability: 0.3,\n    startNewPathProbability: 0.005,\n    removePathProbability: 0.005,\n\n    maxPositionMutation: Math.PI / 5,\n    maxColorMutation: 10,\n    maxLineWidthMutation: 2,\n    maxSpeedMutation: 1,\n};\n\nexport function mutatePainting(painting: Painting) {\n    const iterations = Math.floor(Math.random() * config.maxMutationIterations);\n    for (let i = 0; i < iterations; i++) {\n        const path = painting.paths[Math.floor(Math.random() * painting.paths.length)];\n        if (Math.random() < config.addPositionProbability) {\n            path.instructions.push(generatePositionInstruction());\n        }\n        if (Math.random() < config.addStrokeStyleProbability) {\n            path.instructions.push(generateStrokeStyleInstruction());\n        }\n        if (Math.random() < config.addLineWidthProbability) {\n            path.instructions.push(generateLineWidthInstruction());\n        }\n        if (Math.random() < config.addSpeedProbability) {\n            path.instructions.push(generateSpeedInstruction());\n        }\n        if (Math.random() < config.removeInstructionProbability && path.instructions.length > 1) {\n            let index = Math.floor(Math.random() * path.instructions.length - 1) + 1;\n            path.instructions.splice(index, 1);\n        }\n        if (Math.random() < config.mutateInstructionProbability) {\n            const randomInstruction = path.instructions[Math.floor(Math.random() * path.instructions.length)];\n            instructionMutators[randomInstruction.type](randomInstruction);\n        }\n        // TODO: maybe remodel to have multiple paths?\n        if (Math.random() < config.startNewPathProbability) {\n            painting.paths.push({\n                instructions: [\n                    // TODO: refactor canvas width out\n                    generateBeginInstruction(400, 400),\n                    generatePositionInstruction(),\n                ]\n            })\n        }\n        if (Math.random() < config.removePathProbability && painting.paths.length > 1) {\n            painting.paths.splice(Math.floor(Math.random() * painting.paths.length), 1);\n        }\n    }\n\n}\n\nexport function mutateBeginInstruction(instruction: Instruction) {\n// I don't really want to implement this right now :)\n}\n\nexport function mutateStrokeStyleInstruction(instruction: Instruction) {\n    instruction.args.r *= Math.random() + 0.5;\n    instruction.args.r = norm(instruction.args.r, -config.maxColorMutation, config.maxColorMutation);\n    instruction.args.g *= Math.random() + 0.5;\n    instruction.args.g = norm(instruction.args.g, -config.maxColorMutation, config.maxColorMutation);\n    instruction.args.b *= Math.random() + 0.5;\n    instruction.args.b = norm(instruction.args.b, -config.maxColorMutation, config.maxColorMutation);\n}\n\nexport function mutatePositionInstruction(instruction: Instruction) {\n    const mutationAmount = Math.random() * config.maxPositionMutation * 2 - config.maxPositionMutation;\n    instruction.args.angle = wrap(instruction.args.angle + mutationAmount, 0, Math.PI * 2);\n}\n\nfunction mutateLineWidthInstruction(instruction: Instruction) {\n    const mutationAmount = Math.random() * config.maxLineWidthMutation * 2 - config.maxLineWidthMutation;\n    instruction.args.amount = norm(instruction.args.amount + mutationAmount, -config.maxLineWidthMutation, config.maxLineWidthMutation);\n}\n\nfunction mutateSpeedInstruction(instruction: Instruction) {\n    const mutationAmount = Math.random() * config.maxSpeedMutation * 2 - config.maxSpeedMutation;\n    instruction.args.amount = norm(instruction.args.amount + mutationAmount, -config.maxSpeedMutation, config.maxSpeedMutation);\n}\n\nexport function clone<T>(item: T): T {\n    return JSON.parse(JSON.stringify(item));\n}\n\n","import * as d3 from \"d3-color\";\nimport { norm } from \"./norm\";\n\nexport interface PathBuilder {\n    speed: number;\n    strokeStyle: string;\n    lineWidth: number;\n    x: number;\n    y: number;\n}\n\nexport interface Instruction {\n    type: InstructionType;\n    args: any;\n}\nexport type InstructionProcessor = (ctx: CanvasRenderingContext2D, builder: PathBuilder, args: any) => void;\nexport type InstructionType = \"begin\" | \"strokeStyle\" | \"position\" | \"lineWidth\" | \"speed\" | \"end\";\nexport type InstructionProcessorSet = {[key: string]: InstructionProcessor};\n\nexport const processors: InstructionProcessorSet = {\n    \"begin\": (ctx: CanvasRenderingContext2D, builder: PathBuilder, args: any) => {\n        builder.speed = args.speed;\n        builder.strokeStyle = args.strokeStyle;\n        builder.lineWidth = args.lineWidth;\n        builder.x = args.x;\n        builder.y = args.y;\n\n        ctx.strokeStyle = builder.strokeStyle;\n        ctx.lineWidth = builder.lineWidth;\n        ctx.lineCap = \"round\";\n        ctx.beginPath();\n        ctx.moveTo(builder.x, builder.y);\n    },\n    \"strokeStyle\": (ctx: CanvasRenderingContext2D, builder: PathBuilder, args: any) => {\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(builder.x, builder.y);\n        const color = d3.color(builder.strokeStyle).rgb();\n        color.r += args.r;\n        color.r = norm(color.r, 0, 255);\n        color.g += args.g;\n        color.g = norm(color.g, 0, 255);\n        color.b += args.b;\n        color.b = norm(color.b, 0, 255);\n        builder.strokeStyle = color.hex();\n        ctx.strokeStyle = builder.strokeStyle;\n    },\n    \"position\": (ctx: CanvasRenderingContext2D, builder: PathBuilder, args: any) => {\n        builder.x += Math.cos(args.angle) * builder.speed;\n        builder.x = norm(builder.x, 0, ctx.canvas.width);\n        builder.y += Math.sin(args.angle) * builder.speed;\n        builder.y = norm(builder.y, 0, ctx.canvas.height);\n        ctx.lineTo(builder.x, builder.y);\n    },\n    \"lineWidth\": (ctx: CanvasRenderingContext2D, builder: PathBuilder, args: any) => {\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(builder.x, builder.y);\n        builder.lineWidth += args.amount;\n        builder.lineWidth = norm(builder.lineWidth, 1, 10);\n        ctx.lineWidth = builder.lineWidth;\n    },\n    \"speed\": (ctx: CanvasRenderingContext2D, builder: PathBuilder, args: any) => {\n        builder.speed += args.amount;\n        builder.speed = norm(builder.speed, 0.5, 50);\n    },\n    \"end\": (ctx: CanvasRenderingContext2D, builder: PathBuilder, args: any) => {\n        ctx.stroke();\n    }\n}","import { Painting } from \"./model\";\nimport { PathBuilder, processors } from \"./pathbuilder\";\n\nexport function render(painting: Painting, canvas: HTMLCanvasElement, label?: string) {\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const pathBuilder: PathBuilder = {\n        speed: 0,\n        strokeStyle: \"#fff\",\n        lineWidth: 1,\n        x: 0,\n        y: 0\n    };\n    for (let path of painting.paths) {\n        for (let instruction of path.instructions) {\n            processors[instruction.type](ctx, pathBuilder, instruction.args);\n        }\n        processors[\"end\"](ctx, pathBuilder, null);\n    }\n    if (label) {\n        ctx.strokeStyle = \"#0ff\";\n        ctx.font = \"normal 16px sans\"\n        ctx.lineWidth = 2;\n        ctx.strokeText(label, 20, 20);\n    }\n\n}","import { Painting } from \"./model\";\nimport { clone, mutatePainting, generateRandomInstruction, generateBeginInstruction } from \"./generator\";\nimport { render } from \"./renderer\";\nimport { Instruction } from \"./pathbuilder\";\n\nlet parentCanvas: HTMLCanvasElement;\nlet parent: Painting;\nlet children: Array<Painting>;\n\nconst history: Painting[] = [];\n\nconst numChildren = 7;\n\nconst undo = () => {\n    if (history.length > 0) {\n        parent = history.pop();\n        render(parent, parentCanvas, \"Parent\");\n        generate();\n    }\n};\n\nconst setupChildCanvas = (canvas: HTMLCanvasElement, painting: Painting) => {\n    canvas.addEventListener(\"click\", () => {\n        history.push(parent);\n        parent = painting;\n        render(painting, parentCanvas, \"Parent\");\n        generate();\n    });\n}\n\nconst generate = () => {\n    children = [];\n    const container = document.getElementById(\"children\");\n    container.innerHTML = \"\";\n    for (let i = 0; i < numChildren; i++) {\n        const canvas = document.createElement(\"canvas\") as HTMLCanvasElement;\n\n        canvas.id = `child_${i}`;\n        canvas.width = parentCanvas.width;\n        canvas.height = parentCanvas.height;\n        // canvas.setAttribute(\"style\", parentCanvas.getAttribute(\"style\"));\n        canvas.setAttribute(\n            \"style\",\n            \"background-color: #000; width: 400px; height: 400px; border: 1px solid black; margin: 10px;\"\n        )\n        container.appendChild(canvas);\n\n        const newPainting = clone(parent);\n        mutatePainting(newPainting);\n        children.push(newPainting);\n\n        render(newPainting, canvas, \"Child\");\n        setupChildCanvas(canvas, newPainting);\n    }\n};\n\nconst randomize = () => {\n    const instructions: Instruction[] = [generateBeginInstruction(parentCanvas.width, parentCanvas.height)];\n    const initialInstructionCount = Math.floor(Math.random() * 100);\n    for (let i = 0; i < initialInstructionCount; i++) {\n        instructions.push(generateRandomInstruction());\n    }\n    parent = {\n        paths: [\n            {instructions}\n        ]\n    };\n    render(parent, parentCanvas, \"Parent\");\n    generate();\n};\n\nconst onLoad = () => {\n    parentCanvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n    randomize();\n\n    const restartButton = document.getElementById(\"restart\");\n    restartButton.addEventListener(\"click\", randomize);\n\n    document.getElementById(\"undo\").addEventListener(\"click\", undo);\n\n    parentCanvas.addEventListener(\"click\", generate);\n}\n\nif (document.readyState === \"complete\") {\n    onLoad();\n} else {\n\n    document.addEventListener(\"DOMContentLoaded\", onLoad);\n}"]}